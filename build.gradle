buildscript {
    dependencies {
        // MixinGradle:
        classpath 'org.spongepowered:mixingradle:0.7.+'
    }
}

plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1+'
}

// MixinGradle:
apply plugin: 'org.spongepowered.mixin'

version = project.minecraft_version + '-' + project.mod_version
group = project.maven_group
archivesBaseName = project.archives_base_name

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: "${project.mappings_channel}", version: "${project.mappings_version}"

    runs {
        client {
            workingDirectory project.file('run')
            // property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'rxhandcart'

            mods {
                rxhandcart {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            // property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'rxhandcart'

            mods {
                rxhandcart {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')
            // property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'rxhandcart'

            mods {
                rxhandcart {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            // property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'rxhandcart'
            args '--mod', 'rxhandcart', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                rxhandcart {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

mixin {
    // MixinGradle Settings
    add sourceSets.main, 'mixins.rxhandcart.refmap.json'
    config 'mixins.rxhandcart.json'

    debug.verbose = true
    debug.export = true
}

repositories {
    // flatDir {
    //     dir 'libs'
    // }
}

dependencies {
    minecraft 'net.minecraftforge:forge:' + minecraft_version + '-' + forge_version

    // Apply Mixin AP
    annotationProcessor "org.spongepowered:mixin:0.8.5:processor"
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "rxhandcart",
            "Specification-Vendor": "Iunius118",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": project.jar.archiveVersion,
            "Implementation-Vendor" :"Iunius118",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
    from("CHANGELOG.txt")
}

jar.finalizedBy('reobfJar')
// publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
